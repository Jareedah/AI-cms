{"id":4029,"date":"2018-09-25T11:48:58","date_gmt":"2018-09-25T11:48:58","guid":{"rendered":"https:\/\/help.perfexcrm.com\/?p=4029"},"modified":"2019-03-27T14:49:57","modified_gmt":"2019-03-27T14:49:57","slug":"create-custom-payment-gateway","status":"publish","type":"post","link":"https:\/\/help.perfexcrm.com\/create-custom-payment-gateway\/","title":{"rendered":"Create Custom Payment Gateway"},"content":{"rendered":"<div class=\"st-alert st-alert- \">The implementation below is compatible for version 2.3.2 or above.<\/div>\n\n\n\n<p>Creating new online payment gateway will require more advanced php knowledge and also knowledge of the payment gateway and the requirements.<\/p>\n\n\n\n<p>Because Perfex CRM uses Codeigniter framework to integrate the payment gateway you will need to create 1 gateway library (gateway config and process method) and 1 gateway controller (for HTTP requests, show form etc..), you can also take a look at the other gateways files in order to get the idea.<\/p>\n\n\n\n<p>In the invoice HTML area when a customer clicks on the button PAY NOW, <strong>we call 1 method from the gateway library<\/strong> which will process everything additional that is required for this gateway eq redirect to gateway website and pass parameters or redirect to&nbsp;<a href=\"https:\/\/www.codeigniter.com\/userguide3\/general\/controllers.html\">controller&nbsp;<\/a>and show form etc\u2026<\/p>\n\n\n\n<p>We have simplified a little the process for creating new gateways e.q. the gateway will be auto showed in Setup-&gt;Settings-&gt;Payment Gateways, encrypting fields, 1 unique function from each gateway library to call etc\u2026 but this will still require effort to get started.<\/p>\n\n\n\n<p>The main folders who you will use when creating a new gateway are:<\/p>\n\n\n\n<ol class=\"wp-block-list\"><li><b>application\/libraries\/gateways \u2013\u00a0<\/b>This file holds the main logic for the gateway eq settings, adding the gateway to the system, the main <strong>process_payment <\/strong>function which is <strong>called each time a customer click on PAY NOW<\/strong> \u00a0button.<\/li><li><a href=\"https:\/\/www.codeigniter.com\/userguide3\/general\/controllers.html\"><b>application\/gateways\/controllers<\/b><\/a><b>\u00a0\u2013\u00a0<\/b>This folder is used in case you need to create valid URL\/s for your gateway eq. webhook or to take the HTTP response from the gateway request. In this case, you should create a Codeigniter controller there.<\/li><\/ol>\n\n\n<div class=\"st-alert st-alert-info \">Before start, make sure that you set <a href=\"https:\/\/help.perfexcrm.com\/faq\/how-to-set-debug-mode\/\">development mode<\/a> in order to see any errors and functions\/hooks deprecation warnings.<\/div>\n\n\n\n<h4 class=\"wp-block-heading\">The PHP Class<\/h4>\n\n\n\n<p>Let&#8217;s assume for this example your gateway name is\u00a0<b>Example<\/b><\/p>\n\n\n\n<p>In&nbsp;<b>application\/libraries\/gateways<\/b>\/ create file&nbsp;<b>Example_gateway.php<\/b>&nbsp;with the following content:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;?php\n\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nclass Example_gateway extends App_gateway\n{\n\u00a0 \u00a0 public function __construct()\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0 \u00a0 * Call App_gateway __construct function\n\u00a0 \u00a0 \u00a0 \u00a0 *\/\n\u00a0 \u00a0 \u00a0 \u00a0 parent::__construct();\n\n\u00a0 \u00a0 \u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Gateway unique id - REQUIRED\n\t * \n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* * The ID must be alphanumeric\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* * The filename (Example_gateway.php) and the class name must contain the id as ID_gateway\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* * In this case our id is \"example\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* * Filename will be Example_gateway.php (first letter is uppercase)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* * Class name will be Example_gateway (first letter is uppercase)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\/\n\u00a0 \u00a0 \u00a0 \u00a0 $this->setId('example');\n\n\u00a0 \u00a0 \u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* REQUIRED\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Gateway name\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\/\n\u00a0 \u00a0 \u00a0 \u00a0 $this->setName('Example');\n\n\u00a0 \u00a0 \u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Add gateway settings\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* You can add other settings here to fit for your gateway requirements\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Currently only 2 field types are accepted for gateway\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* 'type'=>'yes_no'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* 'type'=>'input'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\/\n\u00a0 \u00a0 \u00a0 \u00a0 $this->setSettings(array(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 array(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'name' => 'api_secret_key',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'encrypted' => true,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'label' => 'API KEY',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'type'=>'input',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 array(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'name' => 'api_publishable_key',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'label' => 'SECRET KEY',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'type'=>'input'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 array(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'name' => 'currencies',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'label' => 'settings_paymentmethod_currencies',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'default_value' => 'USD,CAD'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\n\u00a0 \u00a0 \u00a0 \u00a0 ));\n\n\u00a0 \u00a0 \u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* REQUIRED\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0* Hook gateway with other online payment modes\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0*\/\n\u00a0 \u00a0 \u00a0 \u00a0 hooks()->add_filter('app_payment_gateways', [ $this, 'initMode' ]);\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 \/**\n\u00a0 \u00a0 \u00a0* Each time a customer click PAY NOW button on the invoice HTML area, the script will process the payment via this function.\n\u00a0 \u00a0 \u00a0* You can show forms here, redirect to gateway website, redirect to Codeigniter controller etc..\n\u00a0 \u00a0 \u00a0* @param\u00a0 array $data - Contains the total amount to pay and the invoice information\n\u00a0 \u00a0 \u00a0* @return mixed\n\u00a0 \u00a0 \u00a0*\/\n\u00a0 \u00a0 public function process_payment($data)\n\u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 var_dump($data);\n\u00a0 \u00a0 \u00a0 \u00a0 die;\n\u00a0 \u00a0 }\n}<\/code><\/pre>\n\n\n\n<p><strong>There are comments on the functions and variables, you should spend some time to read them because they are important if you want to help you get started.<\/strong><\/p>\n\n\n\n<p>Additionally, you can take a look at the other gateway example in <strong>application\/libraries\/gateways<\/strong> or <strong>application\/controllers\/gateways<\/strong>.<\/p>\n\n\n\n<p>\n\nNow after you create and save the file navigate to&nbsp;<strong>Setup-&gt;Settings-&gt;Payment Gateways<\/strong>&nbsp;you will be able to see&nbsp;<strong>Example<\/strong>&nbsp;gateway listed, what\u2019s up to you now you need to implement the gateway logic how you are going to process the payments, this all depends by the requirements of the payment gateway.\n\n<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Creating new online payment gateway will require more advanced php knowledge and also knowledge of the payment gateway and the requirements. Because Perfex CRM uses Codeigniter framework to integrate the payment gateway you will need to create 1 gateway library (gateway config and process method) and 1 gateway controller (for HTTP requests, show form etc..), [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[22],"tags":[],"class_list":["post-4029","post","type-post","status-publish","format-standard","hentry","category-customization"],"aioseo_notices":[],"_links":{"self":[{"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/posts\/4029","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/comments?post=4029"}],"version-history":[{"count":0,"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/posts\/4029\/revisions"}],"wp:attachment":[{"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/media?parent=4029"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/categories?post=4029"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/help.perfexcrm.com\/wp-json\/wp\/v2\/tags?post=4029"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}